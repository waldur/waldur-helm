include:
  - project: "waldur/waldur-pipelines"
    file: "/templates/stages.yml"
  - project: "waldur/waldur-pipelines"
    file: "/templates/test/check-merge-compatibility.yml"

Run linter:
  image:
    name: "alpine/helm:3.3.1"
    entrypoint: [""]
  stage: test
  interruptible: true
  rules:
    - if: '$SKIP_TESTS == "true" || $SKIP_TESTS == "yes"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - helm lint waldur/

.Test template:
  image: $HELM_TEST_IMAGE
  stage: test
  interruptible: true
  services:
    - name: "docker:19.03.13-dind"
      command: ["--mtu=1300"]
  variables:
    DOCKER_DRIVER: overlay2
  before_script:
    - kind create cluster --config=gitlab-ci/kind-config.yaml --wait 5m
    - sed -i -E -e 's/localhost|0\.0\.0\.0/docker/g' "$HOME/.kube/config"
    - apk update
    - apk add curl git
    - kubectl config view
    - kubectl config current-context
    - helm repo add stable https://kubernetes-charts.storage.googleapis.com
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo update
    - kubectl cluster-info
    - helm dependency update waldur/

Test release installation:
  extends: .Test template
  rules:
    - when: never
    - if: '$SKIP_TESTS == "true"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - helm install waldur waldur/ --set ingress.tls.source=secret,logManagement.enabled=false --dry-run --debug

Test release installation and readiness:
  extends: .Test template
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "schedule"'
  script:
    - helm install rmq bitnami/rabbitmq -f rmq-values.yaml --wait
    - helm install waldur waldur/ --set ingress.tls.source=secret,logManagement.enabled=false --wait --timeout 60m0s
    - helm list
    - kubectl get pods
