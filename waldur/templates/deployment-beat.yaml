apiVersion: apps/v1
kind: Deployment
metadata:
  name: waldur-mastermind-beat
  labels:
{{ include "waldur.labels" . | indent 4 }}
spec:
  progressDeadlineSeconds: 2400
  replicas: 1
  selector:
    matchLabels:
      app: waldur-mastermind-beat
  template:
    metadata:
      labels:
        app: waldur-mastermind-beat
        {{ include "waldur.labels" . | nindent 8 }}
    spec:
      {{ if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- range $i, $val := .Values.imagePullSecrets }}
        - name: {{ $val }}
        {{ end -}}
      {{ end }}
      {{ if .Values.hostAliases }}
      hostAliases:
        {{ toYaml .Values.hostAliases | nindent 8 }}
      {{ end }}
      initContainers:
      {{ if .Values.waldur.initdbEnabled }}
        - name: check-db-ready
          image: {{ .Values.global.imageRegistry }}/{{ .Values.waldur.initdbImageName }}:{{ template "waldur.postgresql.version" . }}
          command: ['sh', '-c',
            'until pg_isready;
            do echo waiting for database; sleep 2; done;']
          env:
            {{- include "waldur.env.initdb" . | nindent 11 }}
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
            limits:
              cpu: 100m
              memory: 200Mi
        - name: create-celery-results-db
          image: {{ .Values.global.imageRegistry }}/{{ .Values.waldur.initdbImageName }}:{{ template "waldur.postgresql.version" . }}
          command: ['sh', '-c', 'createdb celery_results || true']
          env:
            {{- include "waldur.env.initdb" . | nindent 11 }}
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
            limits:
              cpu: 100m
              memory: 200Mi
        - name: waldur-mastermind-migrate
          image: {{ .Values.global.imageRegistry }}/{{ .Values.waldur.imageName }}:{{ .Values.waldur.imageTag }}
          imagePullPolicy: {{ .Values.waldur.pullPolicy }}
          args:
            - initdb
          env:
            {{- include "waldur.credentials" . | nindent 13 }}
          volumeMounts:
            - name: api-override
              mountPath: /etc/waldur/override.conf.py
              subPath: override.conf.py
            - name: api-celery
              mountPath: /etc/waldur/celery.conf
              subPath: celery.conf
            - name: config-features-json
              mountPath: /etc/waldur/features.json
              subPath: features.json
            {{ if .Values.waldur.mastermindTemplating.mastermindTemplatesPath }}
            - name: waldur-mastermind-template
              mountPath: /etc/waldur/notifications-templates.yaml
              subPath: "mastermind-templates.yaml"
            {{ end }}
            {{ if .Values.waldur.notifications }}
            - name: mastermind-notifications-json
              mountPath: /etc/waldur/notifications.json
              subPath: "notifications.json"
            {{ end }}
            {{ if .Values.waldur.whitelabeling.privacyHtmlPath }}
            - name: waldur-mastermind-user-agreements
              mountPath: /etc/waldur/privacy-policy.html
              subPath: "mastermind-pp.html"
            {{ end }}
            {{ if .Values.waldur.whitelabeling.tosHtmlPath }}
            - name: waldur-mastermind-user-agreements
              mountPath: /etc/waldur/terms-of-service.html
              subPath: "mastermind-tos.html"
            {{ end }}
            - name: config-auth-yaml
              mountPath: /etc/waldur/auth.yaml
              subPath: auth.yaml
            - name: config-permissions-override-yaml
              mountPath: /etc/waldur/permissions-override.yaml
              subPath: permissions-override.yaml
          resources:
            {{- toYaml .Values.apiResources | nindent 12 }}
      {{ end }}
      containers:
        - name: waldur-mastermind-beat
          image: {{ .Values.global.imageRegistry }}/{{ .Values.waldur.imageName }}:{{ .Values.waldur.imageTag }}
          imagePullPolicy: {{ .Values.waldur.pullPolicy }}
          args:
            - "beat"
          env:
            {{- include "waldur.credentials" . | nindent 13 }}
          resources:
            {{ if .Values.hpa.celery.enabled }}
            {{- toYaml .Values.hpa.celery.beatResources | nindent 12 }}
            {{ else }}
            {{- toYaml .Values.beatResources | nindent 12 }}
            {{ end }}
          volumeMounts:
            - name: api-override
              mountPath: /etc/waldur/override.conf.py
              subPath: override.conf.py
            - name: api-celery
              mountPath: /etc/waldur/celery.conf
              subPath: celery.conf
            {{ if .Values.waldur.ssh_public_key_path }}
            - name: waldur-ssh-pub-key
              mountPath: /etc/waldur/id_rsa.pub
              subPath: id_rsa.pub
            {{ end }}
            {{ if .Values.waldur.ssh_private_key_path }}
            - name: waldur-ssh-key
              mountPath: /etc/waldur/id_rsa
              subPath: id_rsa
            {{ end }}
      volumes:
      - name: api-override
        configMap:
          name: api-override-config
      - name: api-celery
        configMap:
          name: api-celery-config
      - name: config-features-json
        configMap:
          name: mastermind-config-features-json
      - name: config-auth-yaml
        configMap:
          name: mastermind-config-auth-yaml
      - name: config-permissions-override-yaml
        configMap:
          name: mastermind-config-permissions-override-yaml
      {{ if or .Values.waldur.mastermindTemplating.mastermindTemplatesPath .Values.waldur.mastermindTemplating.mastermindTemplates }}
      - name: waldur-mastermind-template
        configMap:
          name: mastermind-template-config
      {{ end }}
      {{ if .Values.waldur.notifications }}
      - name: mastermind-notifications-json
        configMap:
          name: mastermind-notifications-config
      {{ end }}
      {{ if or (.Values.waldur.whitelabeling.privacyHtmlPath) (.Values.waldur.whitelabeling.tosHtmlPath) }}
      - name: waldur-mastermind-user-agreements
        configMap:
          name: mastermind-user-agreement-config
      {{ end }}
      {{ if .Values.waldur.ssh_public_key_path }}
      - name: waldur-ssh-pub-key
        configMap:
          name: waldur-ssh-pub-key-config
      {{ end }}
      {{ if .Values.waldur.ssh_private_key_path }}
      - name: waldur-ssh-key
        secret:
          secretName: waldur-ssh-key-config
      {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
