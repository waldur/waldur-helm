{{ if .Values.postgres_backup.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: waldur-db-restore
  labels:
{{ include "waldur.labels" . | indent 4 }}
spec:
  replicas: {{ default 1 .Values.replicaCount | int }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "waldur.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "waldur.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: "waldur-postgres-restore"
          image: postgres:{{ template "waldur.postgresql.version" . }}
          command: ["/bin/sh"]
          args: ["-c", "while true; do sleep 100; done;"]
          env:
            - name: POSTGRESQL_HOST
              value: {{ template "waldur.postgresql.host" . }}
            - name: POSTGRESQL_PORT
              value: {{ template "waldur.postgresql.port" . }}
            - name: POSTGRESQL_USER
              value: {{ template "waldur.postgresql.user" . }}
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "waldur.postgresql.secret" . }}
                  key: {{ template "waldur.postgresql.secret.passwordKey" . }}
            - name: POSTGRESQL_NAME
              value: {{ template "waldur.postgresql.dbname" . }}
            - name: PGPASS
              valueFrom:
                secretKeyRef:
                  name: pgpass
                  key: pgpass
          volumeMounts:
            - name: postgres-backup-storage
              mountPath: /var/backups
      volumes:
        - name: postgres-backup-storage
          persistentVolumeClaim:
            claimName: postgres-backup-storage
{{ end }}
