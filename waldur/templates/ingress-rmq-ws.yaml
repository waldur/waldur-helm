apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rabbitmq-ws
  annotations:
    {{ if eq .Values.ingress.className "nginx" }}
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /ws
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    {{ else if or (eq .Values.ingress.className "openshift-default") (eq .Values.ingress.className "haproxy") }}
    haproxy.org/cors-enable: "true"
    haproxy.org/path-rewrite: "/ws"
    haproxy.org/ssl-redirect: "true"
    {{ end }}
    {{ if and .Values.ingress.tls.enabled (eq .Values.ingress.tls.source "letsEncrypt") }}
    cert-manager.io/cluster-issuer: letsencrypt-prod-issuer
    {{ end }}
spec:
  {{ if .Values.ingress.className }}
  ingressClassName: {{ .Values.ingress.className | quote }}
  {{ end }}
  rules:
  - host: {{ .Values.apiHostname }}
    http:
      paths:
      - path: /rmqws
        pathType: Prefix
        backend:
          service:
            name: {{ include "waldur.rabbitmq.rmqHost" . | quote }}
            port:
              number: 15675
      - path: /rmqws-stomp
        pathType: Prefix
        backend:
          service:
            name: {{ include "waldur.rabbitmq.rmqHost" . | quote }}
            port:
              number: 15674
  {{ if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.apiHostname }}
    {{ if .Values.ingress.tls.customMastermindSecretName }}
    secretName: {{ .Values.ingress.tls.customMastermindSecretName | quote }}
    {{ else if or (eq .Values.ingress.tls.source "secret") (eq .Values.ingress.tls.source "letsEncrypt") }}
    secretName: api-certificate
    {{ end }}
  {{ end }}
