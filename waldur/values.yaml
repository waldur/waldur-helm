# Default values for waldur.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

extraReplicas:
  celery:
  api:

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

apiHostname: api.example.com
homeportHostname: web.example.com

affinity: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

hpa:
  api:
    enabled: false
    resources:
      requests:
        cpu: 500m
    cpuUtilizationBorder: 70
  celery:
    enabled: false
    workerResources:
      requests:
        cpu: 2000m
    beatResources:
      requests:
        cpu: 300m
    cpuUtilizationBorder: 80

nodeSelector: {}

tolerations: []

service:
  type: ClusterIP
  port: 80

storageClassName: local-storage

ingress:
  tls:
    source: "letsEncrypt" # Possible values: `letsEncrypt` and `secret`
    secretsDir: "tls"  # Enabled only if source == `secret`

logManagement:
  enabled: true
  elasticHost: "elasticsearch-master.elastic.svc.cluster.local" ## See docs/service-endpoint.md for details.
  elasticPort: "9200"
  elasticProtocol: "http"

waldur:
  imageTag: latest
  apiUrl: "https://api.example.com/" ## NB: this string must match `https://<hostname>/` pattern (or similar with `http` protocol)
  homeportUrl: ""
  emailHost: ""
  notificationSubject: ""
  timeZone: "UTC"
  features: []
  currencyName: "EUR"
  site:
    name: "Waldur"
    logo: ""
    address: ""
    email: ""
    phone: ""
  authMethods: 
    - LOCAL_SIGNIN
  facebook:
    secret: ""
    clientId: ""
  google:
    secret: ""
    clientId: ""
  smartid:
    secret: ""
    clientId: ""
  tara:
    secret: ""
    clientId: ""
  ldap:
    host: ""
    baseDN: ""
    userDN: ""
    user: ""
    password: ""
    admins: ""
    support: ""
  freeipa:
    hostname: ""
    password: ""
    username: ""
    verifySSL: ""
    groupnamePrefix: ""
    usernamePrefix: ""
  valimo:
    apId: ""
    apPwd: ""
    dnsname: ""
    url: ""
    signatureProfile: ""
    label: ""
    mobilePrefix: ""
  paypal:
    secret: ""
    clientId: ""
  analytics:
    databaseName: ""
  ansible:
    sshPublicKeyUUID: ""
  invoice:
    company: ""
    address: ""
    country: ""
    email: ""
    postalCode: ""
    phoneCountryCode: ""
    phoneNationalNumber: ""
    bank: ""
    bankAccount: ""
    vatCode: ""
    paymentInterval: ""
  slurm:
    customerPrefix: ""
    projectPrefix: ""
    allocationPrefix: ""
  support:
    customBackend: ""
    servicedeskEmail: ""
    servicedeskToken: ""
    servicedeskUsername: ""
    servicedeskPassword: ""
    servicedeskUrl: ""
    organizationField: ""
    projectKey: ""
    homeportIssueUrl: ""
  marketplace:
    openstack:
      instanceCategoryUUID: ""
      volumeCategoryUUID: ""
      tenantCategoryUUID: ""
  uwsgi:
    plugins: python36
    processes: 16
  sentryDSN: ""
  whitelabeling:
    shortPageTitle: ""
    modePageTitle: ""
    loginLogoUrl: ""
    loginLogoBlobPath: ""
    sidebarLogoUrl: ""
    sidebarLogoBlobPath: ""
    poweredByLogoUrl: ""
    poweredByLogoBlobPath: ""
    faviconPath: ""
    faviconBlobPath: ""
    manifestJsonPath: ""
    logo96Path: ""
    logo96BlobPath: ""
    logo144Path: ""
    logo144BlobPath: ""
    logo192Path: ""
    logo192BlobPath: ""
    tosHtmlPath: ""
    privacyHtmlPath: ""
  mastermindTemplating:
    mastermindTemplatesPath: "mastermind_templates"
  saml2:
    enabled: false
    dir: "waldur_saml2"

postgresql:
  enabled: false
  postgresqlDatabase: waldur
  postgresqlUsername: waldur
  postgresqlPassword: waldur
  persistence:
    size: 10Gi
  image:
    tag: 12
  exisitingSecret: ""

postgresql-ha:
  enabled: true
  postgresql:
    database: waldur
    username: waldur
    password: waldur
    exisitingSecret: ""
    replicaCount: 3
    syncReplication: false
    repmgrUsername: repmgr
    repmgrPassword: waldur
  persistence:
    size: 10Gi
  pgpoolImage:
    tag: 4
  postgresqlImage:
    tag: 12

minio:
  accessKey: ""
  secretKey: ""
  bucketName: data
  ## min.io service endpoint used for communication inside a cluster
  endpoint: "http://minio.default.svc.cluster.local:9000" ## See docs/service-endpoint.md for details.

rabbitmq:
  user: "waldur"
  password: "waldur"
  ## hostname of rabbitmq service
  host: "rmq-rabbitmq.default.svc.cluster.local" ## See docs/service-endpoint.md for details.
  customManagementPort:
  customAMQPPort:

stressTesting:
  enabled: false
  locustFilePath: "locust_task/locust_test.py"
